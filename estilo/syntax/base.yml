# BASE UI
ColorColumn: ''
Conceal: ''
Cursor: ''
CursorColumn: ''
CursorIM: ''
CursorLine: '- cursorline'
CursorLineNR: 'cursorlinenumber'
DiffAdd: ''
DiffChange: ''
DiffDelete: ''
DiffText: ''
Directory: ''
ErrorMsg: ''
FoldColumn: ''
Folded: ''
IncSearch: ''
LineNr: 'linenumber'
MatchParen: '- search'
ModeMsg: ''
MoreMsg: ''
SignColumn: ''
VertSplit: 'linenumber bg'

# these are the tildes at the end which I've opted
# to make disappear, but may not be preferred
NonText: 'bg'

Normal: 'fg bg'
PMenu: ''
PMenuSel: ''
PmenuSbar: ''
PmenuThumb: ''
Question: ''
Search: '- search'
SpecialKey: ''
SpellBad: ''
SpellCap: ''
SpellLocal: ''
SpellRare: ''
StatusLine: ''
StatusLineNC: ''
TabLine: ''
TabLineFill: ''
TabLineSel: ''
Title: ''
Visual: '- highlight'
VisualNOS: ''
WarningMsg: ''
WildMenu: ''

# BASE SYNTAX
Boolean: 'orange' # Constant
Character: '' # Constant
Comment: 'comment'
Conditional: 'blue' # Statement
Constant: 'orange'
Debug: '' # Special
Define: 'pink' # PreProc
Delimiter: 'lightgray' # Special
Error: ''
Exception: '' # Statement
Float: '' # Constant
Function: 'yellow' # Identifier
Identifier: ''
Ignore: ''
Include: '' # PreProc
Keyword: '' # Statement
Label: '' # Statement
Macro: '' # PreProc
Number: 'orange' # Constant
Operator: 'lightgray' # Statement
PreCondit: '' # PreProc
PreProc: ''
Repeat: 'blue' # Statement
Special: ''
SpecialChar: '' # Special
SpecialComment: '' # Special
Statement: ''
StorageClass: '' # Type
String: 'string' # Constant
Structure: '' # Type
Tag: '' # Special
Todo: ''
Type: ''
Typedef: '' # Type
Underlined: ''

# JavaScript
jsArrowFuncArgs: 'lightblue'
jsArrowFunction: 'fg'
jsBooleanFalse: 'orange'
jsBooleanTrue: 'orange'
jsBraces: 'lightgray'
jsCatch: 'blue'
jsComment: 'comment'
jsDestructuringBraces: 'lightgray'
jsException: 'blue'
jsExceptions: 'yellow'
jsExport: 'blue'
jsExportDefault: 'blue'
jsFrom: 'blue'
jsFuncArgs: 'lightblue'
jsFuncBraces: 'lightgray'
jsFuncCall: 'yellow'
jsFuncName: 'yellow'
jsFuncParens: 'lightgray'
jsFunction: 'teal'
jsGlobalNodeObjects: 'blue'
jsGlobalObjects: 'yellow'
jsIfElseBraces: 'lightgray'
jsImport: 'blue'
jsModuleAs: 'blue'
jsModuleAsterisk: 'orange'
jsModuleBraces: 'lightgray'
jsNoise: 'lightgray'
jsNull: 'orange'
jsNumber: 'orange'
jsObjectBraces: 'lightgray'
jsObjectColon: 'lightgray'
jsObjectProp: 'blue'
jsObjectSeparator: 'lightgray'
jsObjectValue: 'lightblue'
jsOperator: 'lightgray'
jsParens: 'lightgray'
jsRepeat: 'blue'
jsReturn: 'blue'
jsStorageClass: 'teal'
jsTemplateBraces: 'pink'
jsTry: 'blue'
jsUndefined: 'orange'
jsEnvComment: 'lightgray'

# JSON
jsonBoolean: 'burntorange'
jsonBraces: 'fg'
jsonFold: 'fg'
jsonKeyword: 'lightblue'
jsonNoise: 'fg'
jsonString: 'string'

# YAML
yamlBlockMappingKey: 'lightblue'
yamlKeyValueDelimiter: 'fg'
# jsonKeywordMatch: 'string'
# jsonQuote: 'lightblue'

# XML/React/HTML
xmlAttrib: 'lightblue'
xmlEndTag: 'yellow'
xmlEqual: 'lightgray'
xmlTag: 'lightgray'
xmlTagName: 'yellow'

# vim
vimAddress: 'pink'
vimAutoCmd: 'blue'
vimAutoEvent: 'lightblue'
vimBracket: 'pink'
vimCommand: 'blue'
vimCommentTitle: 'lightgray'
vimContinue: 'lightgray'
vimFgBgAttrib: 'fg'
vimHiCtermFgBg: 'lightblue'
vimHiGroup: 'lightblue'
vimHiGuiFgBg: 'lightblue'
vimHiKeyList: 'lightblue'
vimLet: 'teal'
vimMap: 'blue'
vimMapMod: 'pink'
vimMapModKey: 'pink'
vimNotation: 'pink'
vimNumber: 'orange'
vimOperParen: 'lightgray'
vimOption: 'lightblue'
vimParenSep: 'lightgray'
vimSep: 'lightgray'
vimSetSep: 'lightgray'
vimSubst1: 'lightblue'
vimSubstDelim: 'pink'
vimSubstFlags: 'pink'
vimUserFunc: 'yellow'
vimVar: 'fg'

# groovy
groovyBoolean: 'orange'
groovyELExpr: 'pink'
groovyExceptions: 'blue'
groovyJDKBuiltin: 'teal'
groovyNumber: 'orange'
groovyParen: 'lightgray'
groovySpecialChar: 'orange'
groovyStatement: 'blue'
groovyType: 'blue'
groovyUserLabel: 'lightblue'

# markdown
markdownBlockquote: 'lightblue'
markdownBold: 'lightblue - ib'
markdownBoldDelimiter: 'lightgray'
markdownCode: 'pink'
markdownCodeDelimiter: 'lightgray'
markdownH1: 'fg - b'
markdownH2: 'fg - b'
markdownH3: 'fg - b'
markdownH4: 'fg - b'
markdownH5: 'fg - b'
markdownH6: 'fg - b'
markdownHeadingDelimiter: 'lightgray - b'
markdownHeadingRule: 'lightgray'
markdownId: 'teal'
markdownIdDeclaration: 'teal'
markdownItalic: 'lightblue - i'
markdownItalicDelimiter: 'lightgray'
markdownLinkText: 'string'
markdownListMarker: 'lightgray'
markdownOrderedListMarker: 'lightgray'
markdownUrl: 'blue'
markdownUrlDelimiter: 'lightgray'
markdownUrlTitleDelimiter: 'lightgray'

# terraform
terraBraces: 'lightgray'
terraBrackets: 'lightgray'
terraSection: 'blue'
terraStringInterp: 'pink'

# zsh
zshCommands: 'blue'
zshDeref: 'pink'
zshOldSubst: 'teal'
zshOptStart: 'lightblue'
zshQuoted: 'orange'
zshShortDeref: 'pink'
zshSubstDelim: 'pink'
zshTypes: 'teal'
zshKeyword: 'teal'
zshKSHFunction: 'yellow'
zshDelimiter: 'blue'

# bash
bashStatement: 'yellow'
shOption: 'teal'
shVariable: 'teal'
shStatement: 'yellow'
shDerefSimple: 'pink'
shCmdSubRegion: 'pink'
shSpecialNoZS: 'orange'
shTestOpr: 'lightblue'
shDeref: 'pink'
shDerefVar: 'pink'
shCaseLabel: 'orange'
shSnglCase: 'teal'
shDblBrace: 'lightgray'

# NERD
NERDTreeCWD: 'blue'
NERDTreeDir: 'lightblue'
NERDTreeDirSlash: 'fg'
NERDTreeOpenable: 'lightgray'
NERDTreeClosable: 'fg'
NERDTreeUp: 'lightgray'
NERDTreeExecFile: 'orange'

